{% extends 'GameBundle::layout.html.twig' %}

{% block title %}Adon Melech - Map view{% endblock %}

{% block content %}

    <div class="container-fluid">
        <!--- MAP CONTAINER --->

        <div class="row">
            <div class="col-md-12">
                <canvas height="500px" width="1200px" id="map" style="margin-left:-70px; margin-top:5px; position: absolute; left: 0; top: 0; z-index: 0;"></canvas>
                <canvas height="500px" width="1200px" id="stuff" style="margin-left:-70px; margin-top:5px; position: absolute; left: 0; top: 0; z-index: 0;"></canvas>
            </div>
        </div>

        <!--- BOTTOM BAR --->

        <div class="row navbar-fixed-bottom">
            <div class="col-md-3 bottom">
                <div class="panel panel-default">
                    <h4>[ContextName]</h4>
                    <p>[ContextProperties]</p>
                    <ul>
                        <li>[Key] => [Value]</li>
                    </ul>
                </div>
            </div>

            <div class="col-md-6">
                    <div class="panel panel-default">
                        <div class="row">
                            <div class="col-md-4">
                            <h4 id="txt-inspector-name">Inspector</h4>
                            <small>[ContextProperties]</p>
                                <ul id="txt-inspector-properties">
                                    <li>[Key] => [Value]</li>
                                </ul></small>
                            </div>
                            <div class="col-md-4">
                                <canvas id="cnv-inspector'"></canvas>
                            </div>
                            <div class="col-md-4">
                                <form name="inspector_controls" action="/control" method="post">
                                    <p>
                                        <select name="listbox" id="#slc-inspector">

                                        </select>
                                    </p>
                                    <p>
                                        <input type="button" name="sample2" class="button btn-default" value="Trade">
                                        <input type="button" name="sample2" class="button btn-default" value="Diplomacy">
                                    </p>
                                    <p>
                                        <input type="button" name="sample1" class="button btn-default" value="Counsel">
                                    </p>
                                </form>
                            </div>
                        </div>
                    </div>
            </div>

            <div class="col-md-3 pull-right">
                <div class="panel panel-default">
                    <h4>News</h4>
                    <ul>
                        <li>[MostRecentItems]</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="{{ asset('js/bootstrap.js') }}" type="text/javascript"></script>
<script>

$(document).ready(function() {

    var plains = new Image();
    plains.src = "\\tiles\\plains_tile.png";
    var hills = new Image();
    hills.src = "\\tiles\\hills_tile.png";
    var desert = new Image();
    desert.src = "\\tiles\\desert_tile.png";
    var mountains = new Image();
    mountains.src = "\\tiles\\mountains_tile.png";
    var swamp = new Image();
    swamp.src = "\\tiles\\swamp_tile.png";
    var forest = new Image();
    forest.src = "\\tiles\\forest_tile.png";
    var shallowsea = new Image();
    shallowsea.src = "\\tiles\\shallowsea_tile.png";
    var deepsea = new Image();
    deepsea.src = "\\tiles\\deepsea_tile.png";
    var city = new Image();
    city.src = "\\tiles\\city.png";
    var clan = new Image();
    clan.src = "\\tiles\\clan.png";

    $.ajax({
        url: "/map",
        type: "GET",
        dataType: "json",
        setInterval: 3300,
        success: function (data) {

            var c = document.getElementById("map");
            var ctx = c.getContext("2d");
            ctx.beginPath();

            for (var i = 0; i < data['data'].length; i++) {
                var x2 = data['data'][i].x * plains.width;
                var y2 = data['data'][i].y * plains.height;
                var gt = data['data'][i].geotype;

                switch (gt) {
                    case 'plains':
                        ctx.drawImage(plains, x2, y2);
                        break;
                    case 'hills':
                        ctx.drawImage(hills, x2, y2);
                        break;
                    case 'mountains':
                        ctx.drawImage(mountains, x2, y2);
                        break;
                    case 'desert':
                        ctx.drawImage(desert, x2, y2);
                        break;
                    case 'swamp':
                        ctx.drawImage(swamp, x2, y2);
                        break;
                    case 'forest':
                        ctx.drawImage(forest, x2, y2);
                        break;
                    case 'deepsea':
                        ctx.drawImage(deepsea, x2, y2);
                        break;
                    case 'shallowsea':
                        ctx.drawImage(shallowsea, x2, y2);
                        break;
                }
            }

            if (data['cities'])
            {
                for(var n = 0; n < (data['cities'].length); n++)
                {
                    ctx.drawImage(city, (data['cities'][n].x * plains.width) + 28, (data['cities'][n].y * plains.height) + 10);
                    ctx.fillText(data['cities'][n].named, (data['cities'][n].x * plains.width) + 33, (data['cities'][n].y * plains.height) + 20);
                }
            }

            var timer = setInterval(function() {

                if (data['clans'])
                {
                    var c = document.getElementById("stuff");
                    var ctx = c.getContext("2d");
                    ctx.clearRect(0, 0, c.width, c.height);
                    ctx.beginPath();

                    for(var n = 0; n < (data['clans'].length); n++)
                    {
                        var fx = Math.floor((Math.random() * 60) + -30);
                        var fy = Math.floor((Math.random() * 20) + 50);
                        ctx.drawImage(clan, (data['clans'][n].x * plains.width) + fx, (data['clans'][n].y * plains.height + fy));
                        ctx.fillText(data['clans'][n].named, (data['clans'][n].x * plains.width) + fx + 8, (data['clans'][n].y * plains.height) + fy + 10);
                    }
                }
            }, 5000);

            sessionStorage.setItem("data", JSON.stringify(data));
        }
    });
});

$(document).bind('click', function () {
    // Add a click-handler to the image.
    $('#stuff').bind('click', function (ev) {
        var $img = $(ev.target);

        var offset = $img.offset();
        var x = ev.clientX - offset.left;
        var y = ev.clientY - offset.top;

        x = Math.floor(x / 100);
        y = Math.floor(y / 100);
        console.log(x + ", " + y);

        var data = JSON.parse(sessionStorage.getItem("data"));

        if (typeof data != 'undefined') {
            var name = document.getElementById("txt-inspector-name");
            var list = document.getElementById("txt-inspector-list");

            for (var i = 0; i < data['cities'].length; i++) {
                if ((data['cities'][i].x == x) && (data['cities'][i].y == y)) {
                    name.innerText = data['cities'][i].named;
                    return;
                }
            }

            for (i = 0; i < data['data'].length; i++) {

                if ((data['data'][i].x == x) && (data['data'][i].y == y)) {
                    name.innerText = data['data'][i].geotype;
                    return;
                    }
                }
            }

    });
});
</script>

{% endblock %}