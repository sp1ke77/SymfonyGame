{% extends 'GameBundle::layout.html.twig' %}

{% block title %}Adon Melech - Map view{% endblock %}

{% block content %}

    <div class="container-fluid">
        <!--- MAP CONTAINER --->

            <div class="row-fluid">
                <div class="col-md-12" oncontextmenu="return false;">
                    <canvas height="600px" width="1200px" id="map" style="margin-left:-70px; margin-top:5px; position: absolute; left: 0; top: 0; z-index: 0;"></canvas>
                    <canvas height="600px" width="1200px" id="stuff" style="margin-left:-70px; margin-top:5px; position: absolute; left: 0; top: 0; z-index: 0;"></canvas>
                </div>
            </div>

        <!--- BOTTOM BAR --->

            <div class="row-fluid navbar-fixed-bottom" id="info-panes" style="margin-bottom:-8px;">
                <div class="col-md-3 pull-right">
                    <div class="panel panel-default">
                        <h4>News</h4>
                        <small>
                        <ul style="list-style-type: hebrew;" id="ul-newsbox">
                        </ul></small>
                    </div>
                </div>
            </div>
    </div>

{% endblock %}

{% block javascripts %}
<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>

$(document).ready(function() {
    var mapview = new MapView();
    var newsbox = new NewsBox();

    // Make the ajax call
    $.ajax({
        url: "/map",
        type: "GET",
        dataType: "json",
        success: function (data) {
            var c = document.getElementById("map");
            var ctx = c.getContext("2d");
            ctx.beginPath();
            mapview.drawMap(ctx, data);

            if (data['cities']) {
                mapview.drawCities(ctx, data);
            }
            // Store whatever data we got in session so that it can be accessed later
            sessionStorage.setItem("mapzones", JSON.stringify(data['mapzones']));
            sessionStorage.setItem("cities", JSON.stringify(data['cities']));

            // Bind mouse event -- receive mouse click on canvas layer two
            $(document).bind('mouseup', function () {
                // Add a click-handler to the image.
                $('#stuff').bind('mouseup', function (ev) {
                    mapview.handleClick(event.which, ev);
                });
            });

            // Bind page reload event -- clear some of the cached stuff when the player manually reloads
            $('body').bind('beforeunload',function(){
                sessionStorage.clear("mapzones");
                sessionStorage.clear("cities");
                sessionStorage.clear("clans");
                sessionStorage.clear("news");
            });

            (function worker() {
                $.ajax({
                    url: "/entities",
                    type: "GET",
                    dataType: "json",
                    success: function(data) {

                        if ((data['clans']) && (JSON.stringify(data['clans']) != sessionStorage.getItem("clans")))
                        {
                            var c = document.getElementById("stuff");
                            var ctx = c.getContext("2d");
                            ctx.clearRect(0, 0, c.width, c.height);
                            ctx.beginPath();
                            mapview.drawClans(ctx, data);
                        }
                        sessionStorage.setItem("clans", JSON.stringify(data['clans']));
                    },
                    complete: function() {
                        // Schedule the next request when the current one's complete
                        setTimeout(worker, 8000);
                    }
                });
            })();

            (function worker() {
                $.ajax({
                    url: "/news",
                    type: "GET",
                    dataType: "json",
                    success: function(data) {
                        var ulElement = document.getElementById('ul-newsbox');
                        newsbox.populate(ulElement, data);
                        sessionStorage.setItem("news", JSON.stringify(data));
                    },
                    complete: function() {
                        // Schedule the next request when the current one's complete
                        setTimeout(worker, 4500);
                    }
                });
            })();
        }
    });
});

</script>

{% endblock %}